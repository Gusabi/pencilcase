#! /bin/bash
# encoding: utf-8
#
# Copyright 2013 Xavier Bruhiere
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# vi: set ft=bash :

set -e
#clear

source utils.sh
source dokuant_lib.sh


log "       Dokuant       "
log "_____________________"
log ""


function usage() {
    log "Usage: $0 command [OPTIONS]"
}


PROJECT=$(get_project_name)


case "$1" in
    create-user)
        create_dokku_user $USER
        success "Done"
    
    ;;
  
    create-app)
        #FIXME If directory clean, stop after initiating git
        create_dokku_app $USER $PROJECT
        success "Done"
  
    ;;
  
    deploy)
        #FIXME Can't give multiple words as comment, concatanate every further args ?
        if [[ $# == 2 ]]; then
            commit_comment=$2
        else
            commit_comment="Automatic commit"
        fi
        deploy_dokku_app $PROJECT $commit_comment
        success "Done, fetching informations"
        #fetch_container_infos $PROJECT

    ;;

    app)
        case "$2" in
            start)
                if [ "$3" == "attach" ]; then
                    attach="True"
                else
                    attach="False"
                fi
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT').start(attach=$attach)"
                success "Application killed"
            ;;
            kill)
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT').kill()"
                success "Application killed"
            ;;
            stop)
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT').stop()"
                success "Application stopped"
            ;;
            infos)
                #NOTE Only on container for now
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT').inspect()"
            ;;
            commit)
                #TODO Understand the whole concept of repository
                tag=$3
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT').commit(tag='$tag')"
                succes "Application committed to app/$PROJECT:$tag"
            ;;
            push)
                log "Not available yet"
            ;;
            remove)
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT:latest').remove()"
                success "Application destroyed"
            ;;
            attach)
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT:latest').attach()"
            ;;
            logs)
                python -c "from docker_client import DockerClient; DockerClient(host='$server_ip', port=$server_port).container('app/$PROJECT:latest').logs(display=True)"
            ;;
            *)
                die "Usage: dokuant app command"
            ;;
        esac
    ;;

    connect)
        interpreter=$2
        #TODO Right now ssh is the only working interpreter
        repl_container $PROJECT "ssh"

    ;;

    *)
        usage
        die "..."
    ;;
esac

#!/usr/bin/env bash
# encoding: utf-8
#
# Copyright 2013 Xavier Bruhiere
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# vi: set ft=bash :

set -e


function link_strategie_files() {
    PROJECT=$1
    while IFS=' ' read -ra ADDR; do
        for file in "${ADDRE[@]}"; do
            # Detect
            if [[ $(cat $PROJECT/$file | grep "TradingAlgorithm") != "" ]]; then
                target_path="$QTRADE/neuronquant/algorithmic/strategies"
            elif [[ $(cat $PROJECT/$file | grep "PortfolioManager") != "" ]]; then
                target_path="$QTRADE/neuronquant/algorithmic/managers"
            elif [[ $(cat $PROJECT/$file | grep "DataSource") != "" ]]; then
                if [[ "$file" == *"Live"* ]]; then
                    target_path="$QTRADE/neuronquant/data/ziplinesources/live"
                else
                    target_path="$QTRADE/neuronquant/data/ziplinesources/backtest"
                fi
            fi

            #Link
            link_files $(pwd)/$PROJECT/$file $target_path/$file
        done
    done <<< "$(ls $PROJECT)"
}


function render_template_files() {
    log "Setting up quant environment"
    if [ $1 ]; then
        arguments+=" --strategie $1"
    fi
    if [ $2 ]; then
        arguments+=" --manager $2"
    fi
    if [ $3 ]; then
        arguments+=" --source $3"
    fi
    if [ $4 ]; then
        arguments+=" --author $4"
    fi
    log "Generating project files from templates"
    echo $arguments
    generate_quant_env.py $arguments
    success "Done"
}


while getopts ":hs:a:m:d:" OPTION; do
    case $OPTION in
        h)
            echo "Usage: $0 --strategie=<name> [--manager=<name>] [--source=<name>] [--author=<name>]"
            exit
            ;;
        s)
            STRATEGIE=$OPTARG
            ;;
        a)
            AUTHOR=$OPTARG
            ;;
        m)
            MANAGER=$OPTARG
            ;;
        d)
            SOURCE=$OPTARG
            ;;
        *)
            echo "Usage: $0 --strategie=<name> [--manager=<name>] [--source=<name>] [--author=<name>]"
            exit 1
            ;;
     esac
done

source utils.sh


render_template_files $STRATEGIE $MANAGER $SOURCE $AUTHOR
log "Copying default configuration file"
cp $HOME/local/templates/plugins.tpl plugins.json
success "Done"

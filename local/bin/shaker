#! /bin/bash
# encoding: utf-8
#
# Copyright 2013 Xavier Bruhiere
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# vi: set ft=bash :


source utils.sh
source shaker_lib.sh


log "       Shaker       "
log "____________________"
log ""


function usage() {
    log "Usage: $0 command [OPTIONS]"
}


#TODO help
while getopts ":i:m:p:u:w:" optname
do
  case "$optname" in
    "i")
        image=$OPTARG
        ;;
    "m")
        memory=$OPTARG
        ;;
    "p")
        project=$OPTARG
        ;;
    "u")
        github_user=$OPTARG
        ;;
    "w")
        where=$OPTARG
        ;;
    "?")
        echo "Unknown option $OPTARG"
        ;;
    ":")
        echo "No argument value for option $OPTARG"
        ;;
    *)
        # Should not occur
        echo "Unknown error while processing options"
        ;;
  esac
done


arguments=()
for p in "${@:$OPTIND}"
    do
    #echo "$p"
    arguments+=($p)
done


if [ ! $project ]; then
    die "You have to sepcifie which project you are working on"
fi


case "${arguments[0]}" in

    setup)
        if [ ! $project ]; then
            die "You have to sepcifie which project you are working on"
        fi
        # Set default values
        github_user=${github_user:-Gusabi}
        image=${image:-precise64}
        memory=${memory:-1024}
        create_instance $project $github_user $image $memory

    ;;

    connect)
        if [ ! $project ]; then
            die "You have to sepcifie which project you are working on"
        fi
        connect $project

    ;;

    sync)
        # shaker sync from/to project
        where=${where:-from}
        synchronize_project $where $project

    ;;

    box)
        # Errors when running commands through ssh, use rest api
        if [ ! $project ]; then
            die "You have to specifie which project you are working on"
        fi
        # Remote vagrant commands
        vagrant_command=${arguments[1]}
        remote_box $project $vagrant_command

    ;;

    *)
        usage
        die "..."
    ;;

esac
